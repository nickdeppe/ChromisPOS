//    Chromis POS  - The New Face of Open Source POS
//    Copyright (c) (c) 2015-2016
//    http://www.chromis.co.uk
//
//    This file is part of Chromis POS
//
//     Chromis POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Chromis POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Chromis POS.  If not, see <http://www.gnu.org/licenses/>.

package uk.chromis.pos.inventory;

import java.awt.Component;
import java.awt.event.ActionListener;
import java.util.List;
import uk.chromis.basic.BasicException;
import uk.chromis.data.gui.ComboBoxValModel;
import uk.chromis.data.loader.QBFCompareEnum;
import uk.chromis.data.loader.SentenceList;
import uk.chromis.data.loader.SerializerWrite;
import uk.chromis.data.loader.SerializerWriteString;
import uk.chromis.pos.forms.AppLocal;
import uk.chromis.pos.forms.AppView;
import uk.chromis.pos.forms.DataLogicSales;
import uk.chromis.pos.reports.ReportEditorCreator;

/**
 *
 * @author adrianromero
 */
public class ShowScheduleFilter extends javax.swing.JPanel implements ReportEditorCreator {

    private SentenceList showSentence;
    private SentenceList theatreSentence;
    private ComboBoxValModel showModel;
    private ComboBoxValModel theatreModel;

    /** Creates new form AttributeUseFilter */
    public ShowScheduleFilter() {
        initComponents();
    }

    /**
     *
     * @param app
     */
    @Override
    public void init(AppView app) {

        DataLogicSales dlSales = (DataLogicSales) app.getBean("uk.chromis.pos.forms.DataLogicSales");

        showSentence = dlSales.getShowsList();
        theatreSentence = dlSales.getTheatresList();

    }

    /**
     *
     * @throws BasicException
     */
    @Override
    public void activate() throws BasicException {

        List a = showSentence.list();
        showModel = new ComboBoxValModel(a);
        showModel.setSelectedFirst();
        m_jShow.setModel(showModel);

        List b = theatreSentence.list();
        theatreModel = new ComboBoxValModel(b);
        theatreModel.setSelectedFirst();
        m_jTheatre.setModel(theatreModel);

    }

    /**
     *
     * @return
     */
    @Override
    public SerializerWrite getSerializerWrite() {
        return SerializerWriteString.INSTANCE;
    }

    /**
     *
     * @return
     */
    @Override
    public Component getComponent() {
        return this;
    }

    /**
     *
     * @param l
     */
    public void addActionListener(ActionListener l) {
        m_jShow.addActionListener(l);
        m_jTheatre.addActionListener(l);
    }

    /**
     *
     * @param l
     */
    public void removeActionListener(ActionListener l) {
        m_jShow.removeActionListener(l);
        m_jTheatre.removeActionListener(l);
    }

    /**
     *
     * @return
     * @throws BasicException
     */
    @Override
    public Object createValue() throws BasicException {
        
        QBFCompareEnum showMode;
        QBFCompareEnum theatreMode;
        
        Object showKey = showModel.getSelectedKey();
        Object theatreKey = theatreModel.getSelectedKey();
        
        showMode = ( showKey == null ) ? QBFCompareEnum.COMP_NONE : QBFCompareEnum.COMP_EQUALS;
        theatreMode = ( theatreKey == null ) ? QBFCompareEnum.COMP_NONE : QBFCompareEnum.COMP_EQUALS;
        
        return new Object[]{
            showMode, showKey,
            theatreMode, theatreKey
        };
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabel8 = new javax.swing.JLabel();
      m_jShow = new javax.swing.JComboBox();
      jLabel9 = new javax.swing.JLabel();
      m_jTheatre = new javax.swing.JComboBox();

      jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
      jLabel8.setText(AppLocal.getIntString("label.theatre")); // NOI18N

      m_jShow.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

      jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
      jLabel9.setText(AppLocal.getIntString("label.show")); // NOI18N

      m_jTheatre.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel9)
            .addGap(18, 18, 18)
            .addComponent(m_jShow, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(34, 34, 34)
            .addComponent(jLabel8)
            .addGap(18, 18, 18)
            .addComponent(m_jTheatre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(m_jShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel8)
               .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(m_jTheatre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      jLabel8.getAccessibleContext().setAccessibleName(AppLocal.getIntString("label.theatre")); // NOI18N
      jLabel9.getAccessibleContext().setAccessibleName(AppLocal.getIntString("label.show")); // NOI18N
   }// </editor-fold>//GEN-END:initComponents


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel jLabel8;
   private javax.swing.JLabel jLabel9;
   private javax.swing.JComboBox m_jShow;
   private javax.swing.JComboBox m_jTheatre;
   // End of variables declaration//GEN-END:variables

}

