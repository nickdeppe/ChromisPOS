/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.chromis.beans;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.Date;
import javax.swing.Timer;
import uk.chromis.format.Formats;

/**
 *
 * @author nick
 */
public class JDateSelectorPanel extends javax.swing.JPanel {

    
    private boolean enabled = true;
    
    private Date selectedDate;
    private Calendar cal;
    private Date minDate = null;
        
    private Timer prevTimer, nextTimer;

    
    
    /**
     * Creates new form jDateSelectorPanel
     */
    public JDateSelectorPanel() {
        this(new Date(), null);
    }
    
    
    public JDateSelectorPanel(Date initialDate, Date minDate) {
        initComponents();
        cal = Calendar.getInstance();
        this.setDate(initialDate);
        this.minDate = minDate;

        this.prevTimer = new Timer(150, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (m_jButtonDatePrevious.isEnabled()) {
                    cal.setTime(selectedDate);
                    cal.add(Calendar.DATE, -1);
                    setDate(cal.getTime());
                } else {
                    prevTimer.stop();
                }
            }
        });
        
        this.nextTimer = new Timer(150, new ActionListener() {
           @Override
           public void actionPerformed(ActionEvent e) {
                if (m_jButtonDateNext.isEnabled()) {
                    cal.setTime(selectedDate);
                    cal.add(Calendar.DATE, 1);
                    setDate(cal.getTime());
                } else {
                    nextTimer.stop();
                }
           }
        });
        
    }
    

    public void setMinDate(Date minDate) {
        this.minDate = minDate;
        if (DateUtils.isDateLessThanOrEqual(this.selectedDate, this.minDate)) {
            this.selectedDate = this.minDate;
        }
        this.setDate(this.selectedDate);
    }
    
    public Date getMinDate() {
        return this.minDate;
    }
    
    public void clearMinDate() {
        this.setDate(null);
    }
    
    
    
    public final void setEnabled(boolean enabled) {
        this.enabled = enabled;
        this.m_jButtonDate.setEnabled(enabled);
        this.m_jButtonDatePrevious.setEnabled(enabled);
        this.m_jButtonDateNext.setEnabled(enabled);
    }
    
    
    public final boolean getEnabled() {
        return this.enabled;
    }
    
    
    public final void setDate(Date setDate) {
        Date oldDate = this.selectedDate;
        this.selectedDate = setDate;
        setButtonText();
        if (this.minDate != null ) {
            if (isDateLessThan(this.minDate, this.selectedDate)) {
                this.m_jButtonDatePrevious.setEnabled(true);
            } else {
                this.m_jButtonDatePrevious.setEnabled(false);
            }
        } else {
            this.m_jButtonDatePrevious.setEnabled(true);
        }
        this.firePropertyChange("Date", oldDate, this.selectedDate);
    }
    
    
    public final boolean isDateLessThan(Date d1, Date d2) {
        
        Calendar c1 = Calendar.getInstance();
        Calendar c2 = Calendar.getInstance();
        c1.setTime(d1);
        c2.setTime(d2);
        
        int c1Day = c1.get(Calendar.DAY_OF_YEAR);
        int c2Day = c2.get(Calendar.DAY_OF_YEAR);
        int c1Year = c1.get(Calendar.YEAR);
        int c2Year = c2.get(Calendar.YEAR);
        
        if ( c1Year < c2Year) {
            return true;
        } else return (c1Year == c2Year && c1Day < c2Day);
                            
    }
    
    
    public Date getDate() {
        return this.selectedDate;
    }
    
    
    
    private void setButtonText() {
        if (this.isVisible()) {
            String text = Formats.DATE.formatValue(this.selectedDate);
            this.m_jButtonDate.setText(text);
            this.repaint();
        }
    }
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_jButtonDatePrevious = new javax.swing.JButton();
        m_jButtonDate = new javax.swing.JButton();
        m_jButtonDateNext = new javax.swing.JButton();

        m_jButtonDatePrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uk/chromis/images/1leftarrow.png"))); // NOI18N
        m_jButtonDatePrevious.setFocusPainted(false);
        m_jButtonDatePrevious.setFocusable(false);
        m_jButtonDatePrevious.setMargin(new java.awt.Insets(8, 14, 8, 14));
        m_jButtonDatePrevious.setRequestFocusEnabled(false);
        m_jButtonDatePrevious.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                m_jButtonDatePreviousPressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                m_jButtonDatePreviousReleased(evt);
            }
        });
        m_jButtonDatePrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jButtonDatePreviousActionPerformed(evt);
            }
        });

        m_jButtonDate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        m_jButtonDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jButtonDateActionPerformed(evt);
            }
        });

        m_jButtonDateNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uk/chromis/images/1rightarrow.png"))); // NOI18N
        m_jButtonDateNext.setFocusPainted(false);
        m_jButtonDateNext.setFocusable(false);
        m_jButtonDateNext.setMargin(new java.awt.Insets(8, 14, 8, 14));
        m_jButtonDateNext.setRequestFocusEnabled(false);
        m_jButtonDateNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                m_jButtonDateNextPressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                m_jButtonDateNextReleased(evt);
            }
        });
        m_jButtonDateNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jButtonDateNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m_jButtonDatePrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_jButtonDate, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_jButtonDateNext)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m_jButtonDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(m_jButtonDateNext)
                            .addComponent(m_jButtonDatePrevious))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void m_jButtonDatePreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jButtonDatePreviousActionPerformed

        this.cal.setTime(this.selectedDate);
        this.cal.add(Calendar.DATE, -1);
        
        this.setDate(this.cal.getTime());
        
    }//GEN-LAST:event_m_jButtonDatePreviousActionPerformed

    private void m_jButtonDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jButtonDateActionPerformed

        // Display the calendar dialog and set the selected date based on user action
        Date date = this.selectedDate;
        JCalendarDialog.setMinDate(this.minDate);
        date = JCalendarDialog.showCalendar(this, date);
        if (date != null) {
            this.setDate(date);
        }
    }//GEN-LAST:event_m_jButtonDateActionPerformed

    private void m_jButtonDateNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jButtonDateNextActionPerformed

        this.cal.setTime(this.selectedDate);
        this.cal.add(Calendar.DATE, 1);
        
        this.setDate(this.cal.getTime());
        
    }//GEN-LAST:event_m_jButtonDateNextActionPerformed

    private void m_jButtonDatePreviousPressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m_jButtonDatePreviousPressed
        this.prevTimer.restart();
    }//GEN-LAST:event_m_jButtonDatePreviousPressed

    private void m_jButtonDatePreviousReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m_jButtonDatePreviousReleased
        this.prevTimer.stop();
    }//GEN-LAST:event_m_jButtonDatePreviousReleased

    private void m_jButtonDateNextPressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m_jButtonDateNextPressed
        this.nextTimer.restart();
    }//GEN-LAST:event_m_jButtonDateNextPressed

    private void m_jButtonDateNextReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m_jButtonDateNextReleased
        this.nextTimer.stop();
    }//GEN-LAST:event_m_jButtonDateNextReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton m_jButtonDate;
    private javax.swing.JButton m_jButtonDateNext;
    private javax.swing.JButton m_jButtonDatePrevious;
    // End of variables declaration//GEN-END:variables


}
